// <0>. 给定一颗2^d个结点的完全二叉树，如果把结点从上到下从左到右编号，
//      则结点k的左右子结点编号分别为2k，2k+1。
// <1>. 根据观察，对于根结点，编号为奇数的猴子向左走，偶数则向右走。
// <2>. 每个节点都可以看成根结点，并且与它的两个子结点组成一个新的二叉树。
// <3>. 如果奇数编号的猴子是往左走的第（i+1)/2个猴子；偶数编号的猴子是往
//      右走的第i/2个猴子。
// <4>. 如果把每个子节点看成一个根结点，并在每经过一个节点后便将猴子编号
//      折半并向上取整，则每个结点的也满足规律1～3。
// <5>. 二叉树深度为d，猴子将下落d-1次，每循环一次，我们就知道它落在哪，
//      下一步怎么走。

#include <cstdio>

int main(void)
{
	int D, I;

	while (scanf("%d%d", &d, &I) && d != 0) {
		int k = 1;
		for (int i = 0; i < d - 1; ++i) {
			if (I % 2) {
				k = k * 2;
				I = (I + 1) / 2;
			} else {
				k = k * 2 + 1;
				I /= 2;
			}
		}
		printf("%d\n", k);
	}
	return 0;
}
